import React, {useContext, useEffect, useState} from 'react';
import {Link, Redirect} from 'react-router-dom';

import useFetch from 'hooks/use-fetch';
import Loading from 'components/loader';
import ErrorMessage from 'components/error-message';
import TagList from 'components/tag-list';
import {CurrentUserContext} from 'contexts/current-user';

const Article = (props) => {
    const slug = props.match.params.slug;
    const apiUrl = `/articles/${slug}`;
    const [
        {
            response: fetchArticleResponse,
            error: fetchArticleError,
            isLoading: fetchArticleIsLoading
        },
        doFetch
    ] = useFetch(apiUrl);
    const [{response: deleteArticleResponse}, doDeleteArticle] = useFetch(apiUrl);
    const [currentUserState] = useContext(CurrentUserContext);
    const [isSuccessfulDelete, setIsSuccessfulDelete] = useState(false);

    console.log("ArticleResponse", fetchArticleResponse);

    const isAuthor = () => {
        if (currentUserState.isLoggedIn === null || !fetchArticleResponse) {
            return false
        }

        return (
            currentUserState.currentUser.username === fetchArticleResponse.article.author.username
        )
    };
    console.log('isAuthor', isAuthor());

    const deleteArticle = () => {
        doDeleteArticle({
            method: 'delete'
        })
    };

    useEffect(() => {
        doFetch();
    }, [doFetch]);

    useEffect(() => {
        if (!deleteArticleResponse) {
            return
        }
        setIsSuccessfulDelete(true);
    }, [deleteArticleResponse]);

    if (isSuccessfulDelete) {
        return <Redirect to="/" />
    }

    return (
        <div className="article-page">
            <div className="banner">
                {!fetchArticleIsLoading && fetchArticleResponse && (
                    <div className="container">
                        <h1>{fetchArticleResponse.article.title}</h1>
                        <div className="article-meta">
                            <Link to={`/profiles/${fetchArticleResponse.article.author.username}`} >
                                <img src={fetchArticleResponse.article.author.image} alt="" />
                            </Link>
                            <div className="info">
                                <Link to={`/profiles/${fetchArticleResponse.article.author.username}`} >
                                    {fetchArticleResponse.article.author.username}
                                </Link>
                                <span className="data">{fetchArticleResponse.article.createdAt}</span>
                            </div>
                            {isAuthor() && (
                                <span>
                                    <Link
                                        to={`/articles/${fetchArticleResponse.article.slug}/edit`}
                                        className="btn btn-outline-secondary btn-sm">
                                        <i className="ion-edit"/>
                                        Edit Article
                                    </Link>
                                    <button
                                        className="btn btn-outline-danger btn-sm"
                                        onClick={deleteArticle}>
                                        <i className="ion-trash-a"/>
                                        Delete Article
                                    </button>
                                </span>
                            )}
                        </div>
                    </div>
                )}
            </div>
            <div className="container page">
                {fetchArticleIsLoading && <Loading />}
                {fetchArticleError && <ErrorMessage />}
                {!fetchArticleIsLoading && fetchArticleResponse && (
                    <div className="row article-content">
                        <div className="col-xs-12">
                            <div>
                                <p>{fetchArticleResponse.article.body}</p>
                            </div>
                            <TagList tags={fetchArticleResponse.article.tagList} />
                        </div>
                    </div>
                )}
            </div>
        </div>
    )
};

export default Article;

